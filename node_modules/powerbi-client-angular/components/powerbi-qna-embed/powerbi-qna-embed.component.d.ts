import { AfterViewInit, OnChanges, OnInit, SimpleChanges } from '@angular/core';
import { IQnaEmbedConfiguration, Qna } from 'powerbi-client';
import { EventHandler, PowerBIEmbedComponent } from '../powerbi-embed/powerbi-embed.component';
/**
 * Qna component to embed the Qna visual, extends Base component
 */
import * as ɵngcc0 from '@angular/core';
export declare class PowerBIQnaEmbedComponent extends PowerBIEmbedComponent implements OnInit, OnChanges, AfterViewInit {
    embedConfig: IQnaEmbedConfiguration;
    eventHandlers?: Map<string, EventHandler | null>;
    private containerRef;
    private _embed?;
    private get embed();
    private set embed(value);
    constructor();
    getQna(): Qna;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    /**
     * Embed the PowerBI QnA Visual
     *
     * @returns void
     */
    private embedQnaVisual;
    /**
     * When component updates, choose to _embed_ the powerbi qna visual
     * or do nothing if the embedUrl and accessToken did not update in the new properties
     *
     * @param prevEmbedConfig IQnaEmbedConfiguration
     * @returns void
     */
    private embedOrUpdateQna;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<PowerBIQnaEmbedComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<PowerBIQnaEmbedComponent, "powerbi-qna[embedConfig]", never, { "embedConfig": "embedConfig"; "eventHandlers": "eventHandlers"; }, {}, never, never, false>;
}

//# sourceMappingURL=powerbi-qna-embed.component.d.ts.map