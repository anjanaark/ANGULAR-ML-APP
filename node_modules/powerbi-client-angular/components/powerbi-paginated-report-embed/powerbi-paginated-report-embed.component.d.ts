import { AfterViewInit, OnChanges, OnInit, SimpleChanges } from '@angular/core';
import { IEmbedConfiguration } from 'powerbi-client';
import { PowerBIEmbedComponent } from '../powerbi-embed/powerbi-embed.component';
/**
 * Paginated report component to embed the entity, extends the Base component
 */
import * as ɵngcc0 from '@angular/core';
export declare class PowerBIPaginatedReportEmbedComponent extends PowerBIEmbedComponent implements OnInit, OnChanges, AfterViewInit {
    embedConfig: IEmbedConfiguration;
    private containerRef;
    private _embed?;
    private get embed();
    private set embed(value);
    constructor();
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    /**
     * Embed the PowerBI Paginated report
     *
     * @returns void
     */
    private embedPaginatedReport;
    /**
     * When component updates, choose to _embed_ the powerbi paginated report
     * or do nothing if the embedUrl and accessToken did not update in the new properties
     *
     * @param prevEmbedConfig IEmbedConfiguration
     * @returns void
     */
    private embedOrUpdatedPaginatedReport;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<PowerBIPaginatedReportEmbedComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<PowerBIPaginatedReportEmbedComponent, "powerbi-paginated-report[embedConfig]", never, { "embedConfig": "embedConfig"; }, {}, never, never, false>;
}

//# sourceMappingURL=powerbi-paginated-report-embed.component.d.ts.map