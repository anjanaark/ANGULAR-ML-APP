{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../powerbi-client-angular/src/utils/utils.ts","../../../powerbi-client-angular/src/components/powerbi-embed/powerbi-embed.component.ts","../../../powerbi-client-angular/src/components/powerbi-report-embed/powerbi-report-embed.component.ts","../../../powerbi-client-angular/src/components/powerbi-dashboard-embed/powerbi-dashboard-embed.component.ts","../../../powerbi-client-angular/src/components/powerbi-tile-embed/powerbi-tile-embed.component.ts","../../../powerbi-client-angular/src/components/powerbi-paginated-report-embed/powerbi-paginated-report-embed.component.ts","../../../powerbi-client-angular/src/components/powerbi-visual-embed/powerbi-visual-embed.component.ts","../../../powerbi-client-angular/src/components/powerbi-qna-embed/powerbi-qna-embed.component.ts","../../../powerbi-client-angular/src/powerbi-embed.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","this","constructor","create","PowerBIEmbedComponent","prevEventHandlerMapString","ngOnInit","service","powerbi","Service","factories","hpmFactory","wpmpFactory","routerFactory","setSdkInfo","setEventHandlers","embed","eventHandlerMap","eventHandlerMapString","map","mapEntries","from","JSON","stringify","mapEntry","toString","stringifyMap","forEach","eventHandlerMethod","eventName","off","on","event","Component","args","selector","template","Input","PowerBIReportEmbedComponent","_this","_super","phasedEmbedding","defineProperty","_embed","newEmbedInstance","getReport","ngOnChanges","changes","embedConfig","prevEmbedConfig","previousValue","embedOrUpdateReport","eventHandlers","ngAfterViewInit","containerRef","nativeElement","accessToken","embedUrl","embedReport","bootstrap","load","ViewChild","PowerBIDashboardEmbedComponent","getDashboard","embedOrUpdateDashboard","embedDashboard","PowerBITileEmbedComponent","getTile","embedOrUpdateTile","embedTile","PowerBIPaginatedReportEmbedComponent","embedOrUpdatedPaginatedReport","embedPaginatedReport","PowerBIVisualEmbedComponent","getVisual","embedOrUpdateVisual","embedVisual","PowerBIQnaEmbedComponent","getQna","embedOrUpdateQna","embedQnaVisual","NgModule","declarations","imports","exports"],"mappings":"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","sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\nimport { EventHandler } from '../components/powerbi-embed/powerbi-embed.component';\r\n\r\n/**\r\n * Get JSON string representation of the given map.\r\n *\r\n * @param map Map of event and corresponding handler method\r\n *\r\n */\r\nexport const stringifyMap = (map: Map<string, EventHandler | null> | undefined): string => {\r\n  // Return empty string for empty/null map\r\n  if (!map) {\r\n    return '';\r\n  }\r\n\r\n  // Get entries of map as array\r\n  const mapEntries = Array.from(map);\r\n\r\n  // Return JSON string\r\n  return JSON.stringify(\r\n    mapEntries.map((mapEntry) =>\r\n      // Convert event handler method to a string containing its source code for comparison\r\n      [mapEntry[0], mapEntry[1] ? mapEntry[1].toString() : '']\r\n    )\r\n  );\r\n};\r\n\r\n// SDK information to be used with service instance\r\nexport const sdkType = 'powerbi-client-angular';\r\nexport const sdkWrapperVersion = '2.0.1';\r\n","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { Embed, factories, service } from 'powerbi-client';\r\nimport { stringifyMap, sdkType, sdkWrapperVersion } from '../../utils/utils';\r\n\r\n/**\r\n * Type for event handler function of embedded entity\r\n */\r\nexport type EventHandler = (event?: service.ICustomEvent<any>, embeddedEntity?: Embed) => void | null;\r\n\r\n/**\r\n * Base component to hold common properties for all the Power BI entities\r\n */\r\n@Component({\r\n  selector: 'powerbi-embed',\r\n  template: '',\r\n})\r\nexport class PowerBIEmbedComponent implements OnInit {\r\n  // Input() specify the properties that will be passed from the parent\r\n  // CSS class to be set on the embedding container (Optional)\r\n  @Input() cssClassName?: string;\r\n\r\n  // Provide a custom implementation of Power BI service (Optional)\r\n  @Input() service?: service.Service;\r\n\r\n  // Power BI service\r\n  powerbi!: service.Service;\r\n\r\n  // JSON stringify of prev event handler map\r\n  private prevEventHandlerMapString = '';\r\n\r\n  ngOnInit(): void {\r\n    // Initialize powerbi variable for child component\r\n    if (this.service) {\r\n      this.powerbi = this.service;\r\n    } else {\r\n      this.powerbi = new service.Service(factories.hpmFactory, factories.wpmpFactory, factories.routerFactory);\r\n    }\r\n\r\n    this.powerbi.setSdkInfo(sdkType, sdkWrapperVersion);\r\n  }\r\n\r\n  /**\r\n   * Sets all event handlers from the input on the embedded entity\r\n   *\r\n   * @param embed Embedded object\r\n   * @param eventHandlerMap Array of event handlers to be set on embedded entity\r\n   * @returns void\r\n   */\r\n  protected setEventHandlers(embed: Embed, eventHandlerMap: Map<string, EventHandler | null>): void {\r\n    // Get string representation of eventHandlerMap\r\n    const eventHandlerMapString = stringifyMap(eventHandlerMap);\r\n\r\n    // Check if event handler map changed\r\n    if (this.prevEventHandlerMapString === eventHandlerMapString) {\r\n      return;\r\n    }\r\n\r\n    // Update prev string representation of event handler map\r\n    this.prevEventHandlerMapString = eventHandlerMapString;\r\n\r\n    // Apply all provided event handlers\r\n    eventHandlerMap.forEach((eventHandlerMethod, eventName) => {\r\n      // Removes event handler for this event\r\n      embed.off(eventName);\r\n\r\n      // Event handler is effectively removed for this event when eventHandlerMethod is null\r\n      if (eventHandlerMethod) {\r\n        // Set single event handler\r\n        embed.on(eventName, (event: service.ICustomEvent<any>): void => {\r\n          eventHandlerMethod(event, embed);\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\nimport { AfterViewInit, Component, ElementRef, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { Embed, IReportEmbedConfiguration, Report } from 'powerbi-client';\r\nimport { EventHandler, PowerBIEmbedComponent } from '../powerbi-embed/powerbi-embed.component';\r\n\r\n/**\r\n * Report component to embed the report, extends the Base Component\r\n */\r\n@Component({\r\n  selector: 'powerbi-report[embedConfig]',\r\n  template: '<div class={{cssClassName}} #reportContainer></div>',\r\n})\r\nexport class PowerBIReportEmbedComponent extends PowerBIEmbedComponent implements OnInit, OnChanges, AfterViewInit {\r\n  // Input() specify properties that will be passed from parent\r\n  // Configuration for embedding the PowerBI Report (Required)\r\n  @Input() embedConfig!: IReportEmbedConfiguration;\r\n\r\n  // Phased embedding flag (Optional)\r\n  @Input() phasedEmbedding?: boolean = false;\r\n\r\n  // Map of event name and handler methods pairs to be triggered on the event (Optional)\r\n  @Input() eventHandlers?: Map<string, EventHandler | null>;\r\n\r\n  // Ref to the HTML div container element\r\n  @ViewChild('reportContainer') private containerRef!: ElementRef<HTMLDivElement>;\r\n\r\n  // Embedded entity\r\n  // Note: Do not read or assign to this member variable directly, instead use the getter and setter\r\n  private _embed?: Embed;\r\n\r\n  // Getter for this._embed\r\n  private get embed(): Embed | undefined {\r\n    return this._embed;\r\n  }\r\n\r\n  // Setter for this._embed\r\n  private set embed(newEmbedInstance: Embed | undefined) {\r\n    this._embed = newEmbedInstance;\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  // Returns embed object to calling function\r\n  getReport(): Report {\r\n    return this._embed as Report;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Initialize PowerBI service instance variable from parent\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.embedConfig) {\r\n      const prevEmbedConfig = changes.embedConfig.previousValue as IReportEmbedConfiguration;\r\n\r\n      // Check if the function is being called for the first time\r\n      if (!prevEmbedConfig) {\r\n        return;\r\n      }\r\n\r\n      // Input from parent get updated, thus call embedOrUpdateReport function\r\n      this.embedOrUpdateReport(prevEmbedConfig);\r\n    }\r\n\r\n    // Set event handlers if available\r\n    if (this.eventHandlers && this.embed) {\r\n      super.setEventHandlers(this.embed, this.eventHandlers);\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // Check if container exists on the UI\r\n    if (this.containerRef.nativeElement) {\r\n      // Decide to embed, load or bootstrap\r\n      if (this.embedConfig.accessToken && this.embedConfig.embedUrl) {\r\n        this.embedReport();\r\n      } else {\r\n        this.embed = this.powerbi.bootstrap(this.containerRef.nativeElement, this.embedConfig);\r\n      }\r\n    }\r\n\r\n    // Set event handlers if available\r\n    if (this.eventHandlers && this.embed) {\r\n      super.setEventHandlers(this.embed, this.eventHandlers);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Embed or load the PowerBI Report based on phasedEmbedding flag\r\n   *\r\n   * @returns void\r\n   */\r\n  private embedReport(): void {\r\n    // Check if the HTML container is rendered and available\r\n    if (!this.containerRef.nativeElement) {\r\n      return;\r\n    }\r\n\r\n    // Load when phasedEmbedding flag is true, embed otherwise\r\n    if (this.phasedEmbedding) {\r\n      this.embed = this.powerbi.load(this.containerRef.nativeElement, this.embedConfig);\r\n    } else {\r\n      this.embed = this.powerbi.embed(this.containerRef.nativeElement, this.embedConfig);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When component updates, choose to _embed_ or _load_ the powerbi report\r\n   * or do nothing if the embedUrl and accessToken did not update in the new properties\r\n   *\r\n   * @param prevEmbedConfig IReportEmbedConfiguration\r\n   * @returns void\r\n   */\r\n  private embedOrUpdateReport(prevEmbedConfig: IReportEmbedConfiguration): void {\r\n    // Check if Embed URL and Access Token are present in current properties\r\n    if (!this.embedConfig.accessToken || !this.embedConfig.embedUrl) {\r\n      return;\r\n    }\r\n\r\n    // Embed or load in the following scenario\r\n    // Embed URL is updated (E.g. New report is to be embedded)\r\n    if (this.containerRef.nativeElement && this.embedConfig.embedUrl !== prevEmbedConfig.embedUrl) {\r\n      this.embedReport();\r\n    }\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\nimport { AfterViewInit, Component, ElementRef, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { Dashboard, Embed, IDashboardEmbedConfiguration } from 'powerbi-client';\r\nimport { EventHandler, PowerBIEmbedComponent } from '../powerbi-embed/powerbi-embed.component';\r\n\r\n/**\r\n * Dashboard component to embed the dashboard, extends the Base component\r\n */\r\n@Component({\r\n  selector: 'powerbi-dashboard[embedConfig]',\r\n  template: '<div class={{cssClassName}} #dashboardContainer></div>',\r\n})\r\nexport class PowerBIDashboardEmbedComponent extends PowerBIEmbedComponent implements OnInit, OnChanges, AfterViewInit {\r\n  // Input() specify properties that will be passed from parent\r\n  // Configuration for embedding the PowerBI Dashboard (Required)\r\n  @Input() embedConfig!: IDashboardEmbedConfiguration;\r\n\r\n  // Map of event name and handler methods pairs to be triggered on the event (Optional)\r\n  @Input() eventHandlers?: Map<string, EventHandler | null>;\r\n\r\n  // Ref to the HTML div container element\r\n  @ViewChild('dashboardContainer') private containerRef!: ElementRef<HTMLDivElement>;\r\n\r\n  // Embedded entity\r\n  // Note: Do not read or assign to this member variable directly, instead use the getter and setter\r\n  private _embed?: Embed;\r\n\r\n  // Getter for this._embed\r\n  private get embed(): Embed | undefined {\r\n    return this._embed;\r\n  }\r\n\r\n  // Setter for this._embed\r\n  private set embed(newEmbedInstance: Embed | undefined) {\r\n    this._embed = newEmbedInstance;\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  // Returns embed object to calling function\r\n  getDashboard(): Dashboard {\r\n    return this.embed as Dashboard;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Initialize PowerBI service instance variable from parent\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.embedConfig) {\r\n      const prevEmbedConfig = changes.embedConfig.previousValue as IDashboardEmbedConfiguration;\r\n\r\n      // Check if the function is being called for the first time\r\n      if (!prevEmbedConfig) {\r\n        return;\r\n      }\r\n\r\n      // Input from parent get updated, thus call embedOrUpdateDashboard function\r\n      this.embedOrUpdateDashboard(prevEmbedConfig);\r\n    }\r\n\r\n    // Set event handlers if available\r\n    if (this.eventHandlers && this.embed) {\r\n      super.setEventHandlers(this.embed, this.eventHandlers);\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // Check if container exists on the UI\r\n    if (this.containerRef.nativeElement) {\r\n      // Decide to embed or bootstrap\r\n      if (this.embedConfig.accessToken && this.embedConfig.embedUrl) {\r\n        this.embedDashboard();\r\n      } else {\r\n        this.embed = this.powerbi.bootstrap(this.containerRef.nativeElement, this.embedConfig);\r\n      }\r\n    }\r\n\r\n    // Set event handlers if available\r\n    if (this.eventHandlers && this.embed) {\r\n      super.setEventHandlers(this.embed, this.eventHandlers);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Embed the PowerBI Dashboard\r\n   *\r\n   * @returns void\r\n   */\r\n  private embedDashboard(): void {\r\n    // Check if the HTML container is rendered and available\r\n    if (!this.containerRef.nativeElement) {\r\n      return;\r\n    }\r\n\r\n    this.embed = this.powerbi.embed(this.containerRef.nativeElement, this.embedConfig);\r\n  }\r\n\r\n  /**\r\n   * When component updates, choose to _embed_ the powerbi dashboard\r\n   * or do nothing if the embedUrl and accessToken did not update in the new properties\r\n   *\r\n   * @param prevEmbedConfig IDashboardEmbedConfiguration\r\n   * @returns void\r\n   */\r\n  private embedOrUpdateDashboard(prevEmbedConfig: IDashboardEmbedConfiguration): void {\r\n    // Check if Embed URL and Access Token are present in current properties\r\n    if (!this.embedConfig.accessToken || !this.embedConfig.embedUrl) {\r\n      return;\r\n    }\r\n\r\n    // Embed in the following scenario\r\n    // Embed URL is updated (E.g. New dashboard is to be embedded)\r\n    if (this.containerRef.nativeElement && this.embedConfig.embedUrl !== prevEmbedConfig.embedUrl) {\r\n      this.embedDashboard();\r\n    }\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\nimport { AfterViewInit, Component, ElementRef, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { Embed, ITileEmbedConfiguration, Tile } from 'powerbi-client';\r\nimport { EventHandler, PowerBIEmbedComponent } from '../powerbi-embed/powerbi-embed.component';\r\n\r\n/**\r\n * Tile component to embed the tile, extends Base component\r\n */\r\n@Component({\r\n  selector: 'powerbi-tile[embedConfig]',\r\n  template: '<div class={{cssClassName}} #tileContainer></div>',\r\n})\r\nexport class PowerBITileEmbedComponent extends PowerBIEmbedComponent implements OnInit, OnChanges, AfterViewInit {\r\n  // Input() specify properties that will be passed from parent\r\n  // Configuration for embedding the PowerBI Tile (Required)\r\n  @Input() embedConfig!: ITileEmbedConfiguration;\r\n\r\n  // Map of event name and handler methods pairs to be triggered on the event (Optional)\r\n  @Input() eventHandlers?: Map<string, EventHandler | null>;\r\n\r\n  // Ref to the HTML div container element\r\n  @ViewChild('tileContainer') private containerRef!: ElementRef<HTMLDivElement>;\r\n\r\n  // Embedded entity\r\n  // Note: Do not read or assign to this member variable directly, instead use the getter and setter\r\n  private _embed?: Embed;\r\n\r\n  // Getter for this._embed\r\n  private get embed(): Embed | undefined {\r\n    return this._embed;\r\n  }\r\n\r\n  // Setter for this._embed\r\n  private set embed(newEmbedInstance: Embed | undefined) {\r\n    this._embed = newEmbedInstance;\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  // Returns embed object to calling function\r\n  getTile(): Tile {\r\n    return this._embed as Tile;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Initialize PowerBI service instance variable from parent\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.embedConfig) {\r\n      const prevEmbedConfig = changes.embedConfig.previousValue as ITileEmbedConfiguration;\r\n\r\n      // Check if the function is being called for the first time\r\n      if (!prevEmbedConfig) {\r\n        return;\r\n      }\r\n\r\n      // Input from parent get updated, thus call embedOrUpdateDashboard function\r\n      this.embedOrUpdateTile(prevEmbedConfig);\r\n    }\r\n\r\n    // Set event handlers if available\r\n    if (this.eventHandlers && this.embed) {\r\n      super.setEventHandlers(this.embed, this.eventHandlers);\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // Check if container exists on the UI\r\n    if (this.containerRef.nativeElement) {\r\n      // Decide to embed or bootstrap\r\n      if (this.embedConfig.accessToken && this.embedConfig.embedUrl) {\r\n        this.embedTile();\r\n      } else {\r\n        this.embed = this.powerbi.bootstrap(this.containerRef.nativeElement, this.embedConfig);\r\n      }\r\n    }\r\n\r\n    // Set event handlers if available\r\n    if (this.eventHandlers && this.embed) {\r\n      super.setEventHandlers(this.embed, this.eventHandlers);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Embed the PowerBI Tile\r\n   *\r\n   * @returns void\r\n   */\r\n  private embedTile(): void {\r\n    // Check if the HTML container is rendered and available\r\n    if (!this.containerRef.nativeElement) {\r\n      return;\r\n    }\r\n\r\n    this.embed = this.powerbi.embed(this.containerRef.nativeElement, this.embedConfig);\r\n  }\r\n\r\n  /**\r\n   * When component updates, choose to _embed_ the powerbi tile\r\n   * or do nothing if the embedUrl and accessToken did not update in the new properties\r\n   *\r\n   * @param prevEmbedConfig ITileEmbedConfiguration\r\n   * @returns void\r\n   */\r\n  private embedOrUpdateTile(prevEmbedConfig: ITileEmbedConfiguration): void {\r\n    // Check if Embed URL and Access Token are present in current properties\r\n    if (!this.embedConfig.accessToken || !this.embedConfig.embedUrl) {\r\n      return;\r\n    }\r\n\r\n    // Embed in the following scenario\r\n    // Embed URL is updated (E.g. New tile is to be embedded)\r\n    if (this.containerRef.nativeElement && this.embedConfig.embedUrl !== prevEmbedConfig.embedUrl) {\r\n      this.embedTile();\r\n    }\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\nimport { AfterViewInit, Component, ElementRef, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { Embed, IEmbedConfiguration } from 'powerbi-client';\r\nimport { PowerBIEmbedComponent } from '../powerbi-embed/powerbi-embed.component';\r\n\r\n/**\r\n * Paginated report component to embed the entity, extends the Base component\r\n */\r\n@Component({\r\n  selector: 'powerbi-paginated-report[embedConfig]',\r\n  template: '<div class={{cssClassName}} #paginatedReportContainer></div>',\r\n})\r\nexport class PowerBIPaginatedReportEmbedComponent extends PowerBIEmbedComponent implements OnInit, OnChanges, AfterViewInit {\r\n  // Input() specify properties that will be passed from parent\r\n  // Configuration for embedding the PowerBI Paginated report (Required)\r\n  @Input() embedConfig!: IEmbedConfiguration;\r\n\r\n  // Ref to the HTML div container element\r\n  @ViewChild('paginatedReportContainer') private containerRef!: ElementRef<HTMLDivElement>;\r\n\r\n  // Embedded entity\r\n  // Note: Do not read or assign to this member variable directly, instead use the getter and setter\r\n  private _embed?: Embed;\r\n\r\n  // Getter for this._embed\r\n  private get embed(): Embed | undefined {\r\n    return this._embed;\r\n  }\r\n\r\n  // Setter for this._embed\r\n  private set embed(newEmbedInstance: Embed | undefined) {\r\n    this._embed = newEmbedInstance;\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Initialize PowerBI service instance variable from parent\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.embedConfig) {\r\n      const prevEmbedConfig = changes.embedConfig.previousValue as IEmbedConfiguration;\r\n\r\n      // Check if the function is being called for the first time\r\n      if (!prevEmbedConfig) {\r\n        return;\r\n      }\r\n\r\n      // Input from parent get updated, thus call embedOrUpdateDashboard function\r\n      this.embedOrUpdatedPaginatedReport(prevEmbedConfig);\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // Check if container exists on the UI\r\n    if (this.containerRef.nativeElement) {\r\n      // Decide to embed\r\n      this.embedPaginatedReport();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Embed the PowerBI Paginated report\r\n   *\r\n   * @returns void\r\n   */\r\n  private embedPaginatedReport(): void {\r\n    // Check if the HTML container is rendered and available\r\n    if (!this.containerRef.nativeElement) {\r\n      return;\r\n    }\r\n\r\n    // Embed paginated report\r\n    this.embed = this.powerbi.embed(this.containerRef.nativeElement, this.embedConfig);\r\n  }\r\n\r\n  /**\r\n   * When component updates, choose to _embed_ the powerbi paginated report\r\n   * or do nothing if the embedUrl and accessToken did not update in the new properties\r\n   *\r\n   * @param prevEmbedConfig IEmbedConfiguration\r\n   * @returns void\r\n   */\r\n  private embedOrUpdatedPaginatedReport(prevEmbedConfig: IEmbedConfiguration): void {\r\n    // Check if Embed URL and Access Token are present in current properties\r\n    if (!this.embedConfig.accessToken || !this.embedConfig.embedUrl) {\r\n      return;\r\n    }\r\n\r\n    // Embed in the following scenario\r\n    // Embed URL is updated (E.g. New paginated report is to be embedded)\r\n    if (this.containerRef.nativeElement && this.embedConfig.embedUrl !== prevEmbedConfig.embedUrl) {\r\n      this.embedPaginatedReport();\r\n    }\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\nimport { AfterViewInit, Component, ElementRef, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { Embed, IVisualEmbedConfiguration, Visual } from 'powerbi-client';\r\nimport { EventHandler, PowerBIEmbedComponent } from '../powerbi-embed/powerbi-embed.component';\r\n\r\n/**\r\n * Visual component to embed the visual, extends Base component\r\n */\r\n@Component({\r\n  selector: 'powerbi-visual[embedConfig]',\r\n  template: '<div class={{cssClassName}} #visualContainer></div>',\r\n})\r\nexport class PowerBIVisualEmbedComponent extends PowerBIEmbedComponent implements OnInit, OnChanges, AfterViewInit {\r\n  // Input() specify properties that will be passed from parent\r\n  // Configuration for embedding the PowerBI Visual (Required)\r\n  @Input() embedConfig!: IVisualEmbedConfiguration;\r\n\r\n  // Map of event name and handler methods pairs to be triggered on the event (Optional)\r\n  @Input() eventHandlers?: Map<string, EventHandler | null>;\r\n\r\n  // Ref to the HTML div container element\r\n  @ViewChild('visualContainer') private containerRef!: ElementRef<HTMLDivElement>;\r\n\r\n  // Embedded entity\r\n  // Note: Do not read or assign to this member variable directly, instead use the getter and setter\r\n  private _embed?: Embed;\r\n\r\n  // Getter for this._embed\r\n  private get embed(): Embed | undefined {\r\n    return this._embed;\r\n  }\r\n\r\n  // Setter for this._embed\r\n  private set embed(newEmbedInstance: Embed | undefined) {\r\n    this._embed = newEmbedInstance;\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  // Returns embed object to calling function\r\n  getVisual(): Visual {\r\n    return this._embed as Visual;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Initialize PowerBI service instance variable from parent\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.embedConfig) {\r\n      const prevEmbedConfig = changes.embedConfig.previousValue as IVisualEmbedConfiguration;\r\n\r\n      // Check if the function is being called for the first time\r\n      if (!prevEmbedConfig) {\r\n        return;\r\n      }\r\n\r\n      // Input from parent get updated, thus call embedOrUpdateDashboard function\r\n      this.embedOrUpdateVisual(prevEmbedConfig);\r\n    }\r\n\r\n    // Set event handlers if available\r\n    if (this.eventHandlers && this.embed) {\r\n      super.setEventHandlers(this.embed, this.eventHandlers);\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // Check if container exists on the UI\r\n    if (this.containerRef.nativeElement) {\r\n      // Decide to embed or bootstrap\r\n      if (this.embedConfig.accessToken && this.embedConfig.embedUrl) {\r\n        this.embedVisual();\r\n      } else {\r\n        this.embed = this.powerbi.bootstrap(this.containerRef.nativeElement, this.embedConfig);\r\n      }\r\n    }\r\n\r\n    // Set event handlers if available\r\n    if (this.eventHandlers && this.embed) {\r\n      super.setEventHandlers(this.embed, this.eventHandlers);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Embed the PowerBI Visual\r\n   *\r\n   * @returns void\r\n   */\r\n  private embedVisual(): void {\r\n    // Check if the HTML container is rendered and available\r\n    if (!this.containerRef.nativeElement) {\r\n      return;\r\n    }\r\n\r\n    this.embed = this.powerbi.embed(this.containerRef.nativeElement, this.embedConfig);\r\n  }\r\n\r\n  /**\r\n   * When component updates, choose to _embed_ the powerbi visual\r\n   * or do nothing if the embedUrl and accessToken did not update in the new properties\r\n   *\r\n   * @param prevEmbedConfig IVisualEmbedConfiguration\r\n   * @returns void\r\n   */\r\n  private embedOrUpdateVisual(prevEmbedConfig: IVisualEmbedConfiguration): void {\r\n    // Check if Embed URL and Access Token are present in current properties\r\n    if (!this.embedConfig.accessToken || !this.embedConfig.embedUrl) {\r\n      return;\r\n    }\r\n\r\n    // Embed in the following scenario\r\n    // Embed URL is updated (E.g. New visual is to be embedded)\r\n    if (this.containerRef.nativeElement && this.embedConfig.embedUrl !== prevEmbedConfig.embedUrl) {\r\n      this.embedVisual();\r\n    }\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\nimport { AfterViewInit, Component, ElementRef, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { Embed, IQnaEmbedConfiguration, Qna } from 'powerbi-client';\r\nimport { EventHandler, PowerBIEmbedComponent } from '../powerbi-embed/powerbi-embed.component';\r\n\r\n/**\r\n * Qna component to embed the Qna visual, extends Base component\r\n */\r\n@Component({\r\n  selector: 'powerbi-qna[embedConfig]',\r\n  template: '<div class={{cssClassName}} #qnaContainer></div>',\r\n})\r\nexport class PowerBIQnaEmbedComponent extends PowerBIEmbedComponent implements OnInit, OnChanges, AfterViewInit {\r\n  // Input() specify properties that will be passed from parent\r\n  // Configuration for embedding the PowerBI Qna visual (Required)\r\n  @Input() embedConfig!: IQnaEmbedConfiguration;\r\n\r\n  // Map of event name and handler methods pairs to be triggered on the event (Optional)\r\n  @Input() eventHandlers?: Map<string, EventHandler | null>;\r\n\r\n  // Ref to the HTML div container element\r\n  @ViewChild('qnaContainer') private containerRef!: ElementRef<HTMLDivElement>;\r\n\r\n  // Embedded entity\r\n  // Note: Do not read or assign to this member variable directly, instead use the getter and setter\r\n  private _embed?: Embed;\r\n\r\n  // Getter for this._embed\r\n  private get embed(): Embed | undefined {\r\n    return this._embed;\r\n  }\r\n\r\n  // Setter for this._embed\r\n  private set embed(newEmbedInstance: Embed | undefined) {\r\n    this._embed = newEmbedInstance;\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  // Returns embed object to calling function\r\n  getQna(): Qna {\r\n    return this._embed as Qna;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Initialize PowerBI service instance variable from parent\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.embedConfig) {\r\n      const prevEmbedConfig = changes.embedConfig.previousValue as IQnaEmbedConfiguration;\r\n\r\n      // Check if the function is being called for the first time\r\n      if (!prevEmbedConfig) {\r\n        return;\r\n      }\r\n\r\n      // Input from parent get updated, thus call embedOrUpdateDashboard function\r\n      this.embedOrUpdateQna(prevEmbedConfig);\r\n    }\r\n\r\n    // Set event handlers if available\r\n    if (this.eventHandlers && this.embed) {\r\n      super.setEventHandlers(this.embed, this.eventHandlers);\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // Check if container exists on the UI\r\n    if (this.containerRef.nativeElement) {\r\n      // Decide to embed or bootstrap\r\n      if (this.embedConfig.accessToken && this.embedConfig.embedUrl) {\r\n        this.embedQnaVisual();\r\n      } else {\r\n        this.embed = this.powerbi.bootstrap(this.containerRef.nativeElement, this.embedConfig);\r\n      }\r\n    }\r\n\r\n    // Set event handlers if available\r\n    if (this.eventHandlers && this.embed) {\r\n      super.setEventHandlers(this.embed, this.eventHandlers);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Embed the PowerBI QnA Visual\r\n   *\r\n   * @returns void\r\n   */\r\n  private embedQnaVisual(): void {\r\n    // Check if the HTML container is rendered and available\r\n    if (!this.containerRef.nativeElement) {\r\n      return;\r\n    }\r\n\r\n    this.embed = this.powerbi.embed(this.containerRef.nativeElement, this.embedConfig);\r\n  }\r\n\r\n  /**\r\n   * When component updates, choose to _embed_ the powerbi qna visual\r\n   * or do nothing if the embedUrl and accessToken did not update in the new properties\r\n   *\r\n   * @param prevEmbedConfig IQnaEmbedConfiguration\r\n   * @returns void\r\n   */\r\n  private embedOrUpdateQna(prevEmbedConfig: IQnaEmbedConfiguration): void {\r\n    // Check if Embed URL and Access Token are present in current properties\r\n    if (!this.embedConfig.accessToken || !this.embedConfig.embedUrl) {\r\n      return;\r\n    }\r\n\r\n    // Embed in the following scenario\r\n    // Embed URL is updated (E.g. New Qna visual is to be embedded)\r\n    if (this.containerRef.nativeElement && this.embedConfig.embedUrl !== prevEmbedConfig.embedUrl) {\r\n      this.embedQnaVisual();\r\n    }\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { PowerBIEmbedComponent } from './components/powerbi-embed/powerbi-embed.component';\r\nimport { PowerBIDashboardEmbedComponent } from './components/powerbi-dashboard-embed/powerbi-dashboard-embed.component';\r\nimport { PowerBIPaginatedReportEmbedComponent } from './components/powerbi-paginated-report-embed/powerbi-paginated-report-embed.component';\r\nimport { PowerBIQnaEmbedComponent } from './components/powerbi-qna-embed/powerbi-qna-embed.component';\r\nimport { PowerBIReportEmbedComponent } from './components/powerbi-report-embed/powerbi-report-embed.component';\r\nimport { PowerBITileEmbedComponent } from './components/powerbi-tile-embed/powerbi-tile-embed.component';\r\nimport { PowerBIVisualEmbedComponent } from './components/powerbi-visual-embed/powerbi-visual-embed.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PowerBIEmbedComponent,\r\n    PowerBIDashboardEmbedComponent,\r\n    PowerBIPaginatedReportEmbedComponent,\r\n    PowerBIQnaEmbedComponent,\r\n    PowerBIReportEmbedComponent,\r\n    PowerBITileEmbedComponent,\r\n    PowerBIVisualEmbedComponent,\r\n  ],\r\n  imports: [],\r\n  exports: [\r\n    PowerBIDashboardEmbedComponent,\r\n    PowerBIPaginatedReportEmbedComponent,\r\n    PowerBIQnaEmbedComponent,\r\n    PowerBIReportEmbedComponent,\r\n    PowerBITileEmbedComponent,\r\n    PowerBIVisualEmbedComponent,\r\n  ],\r\n})\r\nexport class PowerBIEmbedModule {}\r\n"]}